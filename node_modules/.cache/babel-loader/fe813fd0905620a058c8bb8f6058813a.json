{"ast":null,"code":"var _jsxFileName = \"/Users/jayrl707/Documents/BCS/ClickyGame/clicky-game-app/src/App.js\";\nimport React, { Component } from 'react';\nimport TileCards from \"./components/TileCards/TileCards\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Header from \"./components/Header/Header\";\nimport Image from \"./images.json\"; // Shuffle Function\n\nfunction shuffle(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const x = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[x], array[i]];\n    array[i] = _ref[0];\n    array[x] = _ref[1];\n  }\n\n  return array;\n}\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Image,\n      score: 0,\n      highscore: 0,\n      clickedImagesArr: []\n    };\n\n    this.clickedImage = id => {\n      let clickedImagesArr = this.state.clickedImagesArr;\n      let score = this.state.score;\n      let highscore = this.state.highscore; // Set Highscore\n\n      if (score > highscore) {\n        this.setState({\n          highscore: score\n        });\n      } // pushes image id to images arr\n\n\n      if (clickedImagesArr.indexOf(id) === -1) {\n        clickedImagesArr.push(id);\n        console.log(clickedImagesArr);\n        this.addToScore();\n        this.shuffleImages(); // winning conditions\n      } else if (this.state.score >= 11) {\n        alert(\"Congratulations, your memory is great!\");\n        this.setState({\n          score: 0,\n          clickedImagesArr: []\n        }); // losing conditions\n      } else {\n        alert(\"You Lost! You scored: \" + score);\n        this.setState({\n          score: 0,\n          clickedImagesArr: []\n        });\n      }\n    };\n\n    this.addToScore = () => {\n      this.setState({\n        score: this.state.score + 1\n      });\n    };\n\n    this.shuffleImages = () => {\n      this.setState({\n        Image: shuffle(Image)\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      score: this.state.score,\n      highscore: this.state.highscore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.Image.map(images => React.createElement(TileCards, {\n      key: images.id,\n      id: images.id,\n      name: images.name,\n      image: images.image,\n      class: \"imgClass\",\n      clickedImage: this.clickedImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jayrl707/Documents/BCS/ClickyGame/clicky-game-app/src/App.js"],"names":["React","Component","TileCards","Wrapper","Header","Image","shuffle","array","i","length","x","Math","floor","random","App","state","score","highscore","clickedImagesArr","clickedImage","id","setState","indexOf","push","console","log","addToScore","shuffleImages","alert","render","map","images","name","image"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TileCards from \"./components/TileCards/TileCards\";\nimport Wrapper from \"./components/Wrapper/Wrapper\";\nimport Header from \"./components/Header/Header\";\nimport Image from \"./images.json\";\n\n// Shuffle Function\nfunction shuffle(array){\n  for (let i = array.length - 1; i > 0; i--){\n    const x = Math.floor(Math.random() * ( i + 1 ));\n    [array[i], array[x]] = [array[x], array[i]];\n  }\n  return array;\n}\n\n\nclass App extends Component {\n  state = {\n    Image,\n    score: 0,\n    highscore: 0,\n    clickedImagesArr: []\n  };\n\n  \n  // Function when image is clicked\n  clickedImage = id => {\n    let clickedImagesArr = this.state.clickedImagesArr;\n    let score = this.state.score;\n    let highscore = this.state.highscore;\n\n    // Set Highscore\n    if (score > highscore){\n      this.setState({highscore: score});\n    }\n\n    // pushes image id to images arr\n    if (clickedImagesArr.indexOf(id) === -1){\n      clickedImagesArr.push(id);\n      console.log(clickedImagesArr);\n      this.addToScore();\n      this.shuffleImages();\n\n      // winning conditions\n    } else if (this.state.score >= 11){\n      alert(\"Congratulations, your memory is great!\");\n      this.setState({\n        score: 0,\n        clickedImagesArr:[]\n      })\n\n      // losing conditions\n    } else {\n      alert(\"You Lost! You scored: \" + score);\n      this.setState({\n        score: 0,\n        clickedImagesArr: []\n        })\n    }\n  }\n\n  \n  // adds to score\n  addToScore = () => {\n    this.setState({ score: this.state.score + 1 })\n  };\n\n  // shuffles images\n  shuffleImages = () => {\n    this.setState({Image: shuffle(Image)});\n  }\n\n\n\n  render(){\n    return(\n      <>\n      <Header\n        score = {this.state.score}\n        highscore = {this.state.highscore}\n      />\n      <Wrapper>\n        {this.state.Image.map(images => (\n          <TileCards \n            key={images.id}\n            id={images.id}\n            name={images.name}\n            image={images.image}\n            class = {\"imgClass\"}\n            clickedImage = {this.clickedImage}\n          />\n        ))}\n        </Wrapper>\n      </>\n\n    )\n  }\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}